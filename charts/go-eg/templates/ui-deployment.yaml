apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: {{ .Release.Name }}-ui
    app.kubernetes.io/name: {{ .Release.Name }}-ui
    app: {{ .Release.Name }}-ui
    version: "1.0"
  name: {{ .Release.Name }}-ui
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}-ui
      app.kubernetes.io/name: {{ .Release.Name }}-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: {{ .Release.Name }}-ui
        app.kubernetes.io/name: {{ .Release.Name }}-ui
        app: {{ .Release.Name }}-ui
        version: "1.0"
    spec:
      containers:
        - image: {{ .Values.ui.image }}:{{ .Values.ui.tag }}
          imagePullPolicy: IfNotPresent
          name: {{ .Release.Name }}-ui
          resources: { }
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: { }
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /config.yaml
              name: config
              subPath: config.yaml
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: my-harbor
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 256
            name: {{ .Release.Name }}-ui-config
            optional: false
          name: config
